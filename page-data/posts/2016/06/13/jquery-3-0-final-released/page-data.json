{
    "componentChunkName": "component---node-modules-gatsby-theme-mini-src-templates-post-jsx",
    "path": "/posts/2016/06/13/jquery-3-0-final-released/",
    "result": {"data":{"site":{"siteMetadata":{"name":"根号三","thumbnail":""}},"markdownRemark":{"frontmatter":{"title":"jQuery 3.0 终于发布啦！","tags":["jQuery3.0","译文"],"cover":null,"date":"2016-06-13","author":"根号三"},"excerpt":"jQuery 3.0 现在发布啦！这个版本从 2014 年 10 月就已经在开始开发了。我们的目标是创建一个更轻量、更快的 jQuery（带有向后兼容的思想）。我们删除了所有的兼容旧版本 IE 浏览器的解决办法，并在一些有意义的地方利用了一些较为现代的 web APIs。它是…","html":"<p>jQuery 3.0 现在发布啦！这个版本从 2014 年 10 月就已经在开始开发了。我们的目标是创建一个更轻量、更快的 jQuery（带有向后兼容的思想）。我们删除了所有的兼容旧版本 IE 浏览器的解决办法，并在一些有意义的地方利用了一些较为现代的 web APIs。它是 2.x 分支的延续，但是包含了少量我们认为早该出现的改变。在一段时间内， 1.12 和 2.2 分支仍将继续获得关键性的支持补丁，但是它们不会得到任何新功能或是重大修订。jQuery 3.0 就是 jQuery 的未来。如果你需要支持 IE6-8，你可以继续使用最新的 1.12 版。</p>\n<p>尽管版本号是 3.0，但是我们预感在升级现有的代码时并不会造成太多的麻烦。是，是有一些 “breaking changes”，这对于主版本号跳跃来说是合理的，但是我们希望这些改变并没有真正影响到很多人。</p>\n<p>为了帮助升级，我们有一个新的 <a href=\"https://jquery.com/upgrade-guide/3.0/\">3.0 升级指南</a>，并且 <a href=\"https://github.com/jquery/jquery-migrate#migrate-older-jquery-code-to-jquery-30\">jQuery Migrate 3.0</a> 将会帮助你识别代码中的兼容性问题。您在这次变化中的反馈将对我们有非常大的帮助，所以请尝试在您现有的代码和插件中使用它吧！</p>\n<p>你可以在 jQuery CDN 中获取到这些文件，或者直接链接他们：</p>\n<p><a href=\"https://code.jquery.com/jquery-3.0.0.js\">https://code.jquery.com/jquery-3.0.0.js</a></p>\n<p><a href=\"https://code.jquery.com/jquery-3.0.0.min.js\">https://code.jquery.com/jquery-3.0.0.min.js</a></p>\n<p>你也可以从 <code class=\"language-text\">npm</code> 中得到这个版本：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install jquery@3.0.0</code></pre></div>\n<p>附带着，我们也发布了 <code class=\"language-text\">jQuery Migrate 3.0</code>。我们强烈建议你使用它来定位 jQuery 3.0 的重大改变而带来的任何问题。你可以在这里获取这些文件：</p>\n<p><a href=\"https://code.jquery.com/jquery-migrate-3.0.0.js\">https://code.jquery.com/jquery-migrate-3.0.0.js</a></p>\n<p><a href=\"https://code.jquery.com/jquery-migrate-3.0.0.min.js\">https://code.jquery.com/jquery-migrate-3.0.0.min.js</a></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install jquery-migrate@3.0.0</code></pre></div>\n<p>有关借助 jQuery Migrate 将你的 jQuery 1.x 和 2.x 页面升级到 jQuery 3.0 的更多信息，请看 <a href=\"http://blog.jquery.com/2016/05/19/jquery-migrate-1-4-1-released-and-the-path-to-jquery-3-0/\"> the jQuery Migrate 1.4.1 blog post.</a></p>\n<h4 id=\"轻量级构建\" style=\"position:relative;\"><a href=\"#%E8%BD%BB%E9%87%8F%E7%BA%A7%E6%9E%84%E5%BB%BA\" aria-label=\"轻量级构建 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>轻量级构建</h4>\n<p>最后，我们在这个版本里添加了一些新东西。有时你不需要 ajax, 或者你更喜欢使用一个专注于 ajax 请求的独立库。你往往使用 CSS 类作为一个简单的组合来操作的所有的网页动画。随着包含 ajax 和动画效果模块的普通版本的 jQuery，我们发布了一个排除了这些模块的 “slim” 版本。总而言之，它排除了 ajax，动画和当前过时的代码。在这关注加载性能的时代，jQuery 的大小是非常罕见的，但是 slim 版本比普通版小了近 6k （gzip 压缩字节）- 23.6k 对 30k。这些文件在 CDN 和 npm 上都是可用的：</p>\n<p><a href=\"https://code.jquery.com/jquery-3.0.0.slim.js\">https://code.jquery.com/jquery-3.0.0.slim.js</a></p>\n<p><a href=\"https://code.jquery.com/jquery-3.0.0.slim.min.js\">https://code.jquery.com/jquery-3.0.0.slim.min.js</a></p>\n<p>这个构建版本是基于我们自定义的构建 API 创建的。它允许你排除或者包含任何你喜欢的模块。查看 jQuery README 文件获取更多信息。</p>\n<h4 id=\"和-jquery-ui-以及-jquery-mobile-之间的兼容性\" style=\"position:relative;\"><a href=\"#%E5%92%8C-jquery-ui-%E4%BB%A5%E5%8F%8A-jquery-mobile-%E4%B9%8B%E9%97%B4%E7%9A%84%E5%85%BC%E5%AE%B9%E6%80%A7\" aria-label=\"和 jquery ui 以及 jquery mobile 之间的兼容性 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>和 jQuery UI 以及 jQuery Mobile 之间的兼容性</h4>\n<p>虽然大多数的功能都能够正常工作，但是在升级的过程中 jQuery UI 和 jQuery Mobile 仍然会有一些小问题。如果你发现了一个问题，记住在下一个版本或许已经解决了，使用 jQuery Migrate 3.0 插件或许也可以修复它。期待很快发布吧。</p>\n<h4 id=\"主要变化\" style=\"position:relative;\"><a href=\"#%E4%B8%BB%E8%A6%81%E5%8F%98%E5%8C%96\" aria-label=\"主要变化 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>主要变化</h4>\n<p>下面是这次的新版本中重要的新功能中的亮点，改进以及 bug 修复，你可以在 <a href=\"http://jquery.com/upgrade-guide/3.0/\">3.0 升级指南</a> 中找到更多的细节。你可以在我们的 <a href=\"https://github.com/jquery/jquery/issues?q=is%3Aissue+milestone%3A3.0.0\">GitHub bug tracker</a> 中获取完整的 bug 修复列表。如果你阅读过 3.0.0-rc1 的博文，你会发现下面的特性和那篇文章中是一样的。</p>\n<h5 id=\"jquerydeferred-现在和-promisesa-规范兼容\" style=\"position:relative;\"><a href=\"#jquerydeferred-%E7%8E%B0%E5%9C%A8%E5%92%8C-promisesa-%E8%A7%84%E8%8C%83%E5%85%BC%E5%AE%B9\" aria-label=\"jquerydeferred 现在和 promisesa 规范兼容 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>jQuery.Deferred 现在和 Promises/A+ 规范兼容</h5>\n<p>为了兼容 Promises/A+ 和 ES2015 Promises，jQuery.Deferred 对象已经更新了。<a href=\"https://github.com/promises-aplus/promises-tests\">Promises/A+ Compliance Test Suite</a> 已经检验通过了。这意味着我们需要对 .then() 方法做出一些重大改变。你可以通过使用现在不赞成使用的 .pipe() 方法来替换所有的 .then() 方法来恢复成传统的行为。</p>\n<p>1、 在 .then() 方法中抛出一个错误现在变成了一个 rejection values。在以前，错误会向上冒泡传递，并终止执行回调函数。deferreds 依赖于所有的 defered 的解决状态，如果其中抛出一个错误，resolve 将不会发生。</p>\n<p>例如：未捕获的异常 对比 rejection values</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var deferred = jQuery.Deferred();\n\ndeferred.then(function() {\n  console.log(\"first callback\");\n  throw new Error(\"error in callback\");\n})\n.then(function() {\n  console.log(\"second callback\");\n}, function(err) {\n  console.log(\"rejection callback\", err instanceof Error);\n});\n\ndeferred.resolve();</code></pre></div>\n<p>在以前，“first callback” 会被打印，并抛出一个错误。然后结束执行。紧挨着的 “second callback” 和 “rejection callback” 不会被打印出来。现在，符合标准的行为是 “rejection callback” 能够正确的被打印，正如你所看到的那样。err 是第一个回调函数中的 rejection values。</p>\n<p>2、 现在可以通过 .then() 方法的回调来控制一个 Deferred 的解决状态，除了 rejection values 和 non-thenable 之外的返回值都会变为 fulfillment values。以前，从 rejection 处理程序中的返回值作为了 rejection values。</p>\n<p>Example: returns from rejection callbacks</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var deferred = jQuery.Deferred();\ndeferred.then(null, function(value) {\n  console.log(\"rejection callback 1\", value);\n  return \"value2\";\n})\n.then(function(value) {\n  console.log(\"success callback 2\", value);\n  throw new Error(\"exception value\");\n}, function(value) {\n  console.log(\"rejection callback 2\", value);\n})\n.then(null, function(value) {\n  console.log(\"rejection callback 3\", value);\n});\ndeferred.reject(\"value1\");</code></pre></div>\n<p>以前，这将打印 “rejection callback 1 value1”, “rejection callback 2 value2”, 和 “rejection callback 3 undefined”.</p>\n<p>现在，符合标准的行为是，这将打印 “rejection callback 1 value1”, “success callback 2 value2″, 和 “rejection callback 3 [object Error]”.</p>\n<p>3、 如果一个 Deferred 已经 resolved 之后，回调函数总是异步调用的。在以前，这些回调函数将会在绑定的时候同步执行。</p>\n<p>Example: async vs sync</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var deferred = jQuery.Deferred();\ndeferred.resolve();\ndeferred.then(function() {\n  console.log(\"success callback\");\n});\nconsole.log(\"after binding\");</code></pre></div>\n<p>在以前，这段代码会先打印 “success callback” 然后打印 “after binding”。现在，它的结果是先打印 “after binding” 然后打印 “success callback”。</p>\n<p>重要：当捕获异常时有利于在浏览器中进行调试，通过拒绝回调函数来处理异常非常具有陈述性。当与 promises 打交道时，记住至少要增加一个拒绝回调函数。否则，任何错误都不会提示。</p>\n<p>我们写了一个插件用来调试 Deferreds 的 Promises/A+ 兼容性。如果在控制台无法看到错误的详细信息和来源，可查阅这里 <a href=\"https://github.com/dmethvin/jquery-deferred-reporter\">jQuery Deferred Reporter Plugin</a>.</p>\n<p><code class=\"language-text\">jQuery.when</code> 升级后可以接受所有 thenable 对象，包括原生的 Promise 对象。</p>\n<p><a href=\"https://github.com/jquery/jquery/issues/1722\">https://github.com/jquery/jquery/issues/1722</a>\n<a href=\"https://github.com/jquery/jquery/issues/2102\">https://github.com/jquery/jquery/issues/2102</a></p>\n<h5 id=\"为-deferreds-添加-catch\" style=\"position:relative;\"><a href=\"#%E4%B8%BA-deferreds-%E6%B7%BB%E5%8A%A0-catch\" aria-label=\"为 deferreds 添加 catch permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>为 Deferreds 添加 .catch()</h5>\n<p><code class=\"language-text\">catch()</code> 方法在 promise 对象中的别名是 <code class=\"language-text\">.then(null, fn)</code>。</p>\n<p><a href=\"https://github.com/jquery/jquery/issues/2102\">https://github.com/jquery/jquery/issues/2102</a></p>\n<h5 id=\"错误情况不静默失败\" style=\"position:relative;\"><a href=\"#%E9%94%99%E8%AF%AF%E6%83%85%E5%86%B5%E4%B8%8D%E9%9D%99%E9%BB%98%E5%A4%B1%E8%B4%A5\" aria-label=\"错误情况不静默失败 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>错误情况不静默失败</h5>\n<p>也许在夜深人静的时候，你突然会想 “window 的 offset 是多少？”，然后你意识到这是一个疯狂的问题 —— window 哪来的 offset？</p>\n<p>在过去，jQuery 也尝试过去返回某些东西而不是抛出异常。在这个 window 的 offset 问题的例子里，直到现在，答案一直是 <code class=\"language-text\">{ top: 0, left: 0 }</code>，在 jQuery 3.0 中，这种情况下，如此疯狂的问题会抛出错误而不是被默默的忽略了。请在这个版本里试试看，那些依赖于 jQuery 的代码是否因为非法输入而抛出错误。</p>\n<p><a href=\"https://github.com/jquery/jquery/issues/1784\">https://github.com/jquery/jquery/issues/1784</a></p>\n<h5 id=\"删除弃用的事件别名\" style=\"position:relative;\"><a href=\"#%E5%88%A0%E9%99%A4%E5%BC%83%E7%94%A8%E7%9A%84%E4%BA%8B%E4%BB%B6%E5%88%AB%E5%90%8D\" aria-label=\"删除弃用的事件别名 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>删除弃用的事件别名</h5>\n<p><code class=\"language-text\">.load</code>, <code class=\"language-text\">.unload</code>, 和 <code class=\"language-text\">.error</code>, 在 jQuery 1.8 后被废弃，使用 <code class=\"language-text\">.on()</code> 来注册监听器。</p>\n<p><a href=\"https://github.com/jquery/jquery/issues/2286\">https://github.com/jquery/jquery/issues/2286</a></p>\n<h5 id=\"动画现在使用-requestanimationframe\" style=\"position:relative;\"><a href=\"#%E5%8A%A8%E7%94%BB%E7%8E%B0%E5%9C%A8%E4%BD%BF%E7%94%A8-requestanimationframe\" aria-label=\"动画现在使用 requestanimationframe permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>动画现在使用 <code class=\"language-text\">requestAnimationFrame</code></h5>\n<p>在支持 <code class=\"language-text\">requestAnimationFrame</code> API 的平台上，除 IE9 和 Android 4.4 外，几乎被广泛支持。jQuery 现在也将使用这个 API 来处理动画。这将让动画更加顺滑、更少的 cpu 消耗，在移动端也将更省电。</p>\n<p>jQuery 在几年前曾尝试使用 <code class=\"language-text\">requestAnimationFrame</code>。但现存代码有有几个 <a href=\"http://blog.jquery.com/2011/09/01/jquery-1-6-3-released/\">严重的兼容性问题</a> 不得不推迟。我们认为通过在浏览器选显卡显示的时候暂定动画处理好了大部分问题，但是，所有依赖动画的代码想要实时执行是不切合实际的。</p>\n<h5 id=\"jquery-自定义选择器的大提速\" style=\"position:relative;\"><a href=\"#jquery-%E8%87%AA%E5%AE%9A%E4%B9%89%E9%80%89%E6%8B%A9%E5%99%A8%E7%9A%84%E5%A4%A7%E6%8F%90%E9%80%9F\" aria-label=\"jquery 自定义选择器的大提速 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>jQuery 自定义选择器的大提速</h5>\n<p>感谢来自谷歌的 Paul Irish 的检测工作，我们发现当 <code class=\"language-text\">:visible</code> 这种的自定义选择器在同一份文件中被多次执行时，大量额外的运算可以省略跳过。现在这一类的运算速度提升了 17 倍！</p>\n<p>要记住的是，尽管有了这些改进，但像 <code class=\"language-text\">:visible</code> 和 <code class=\"language-text\">:hidden</code> 这类选择器耗时代价还是很高的，因为依赖浏览器上的元素是否已经展示出来。在最坏的情况下，这可能需要在完全重算 CSS 样式和页面布局后才能执行。大部分情况我们不能阻止你去使用它，但我们建议你可以测试一下你的页面，看看这些选择器是否造成了性能问题。</p>\n<p>这些改动其实在 1.12/2.2 就已经完成了，但是我们还是想在 jQuery 3.0 里重申一次。</p>\n<p><a href=\"https://github.com/jquery/jquery/issues/2042\">https://github.com/jquery/jquery/issues/2042</a></p>\n<p>如上面提到的，<a href=\"http://jquery.com/upgrade-guide/3.0/\">升级指南</a> 已为各位备好，除了有助于升级，还列出了更多显著的变化。</p>\n<blockquote>\n<p>本文根据 <a href=\"http://blog.jquery.com/author/timmywil/\">Timmy Willison</a> 的《jQuery 3.0 Final Released!》所译，整个译文带有自己的理解与思想，如果译得不好或有不对之处还请同行朋友指点。如需转载此译文，需注明英文出处：<a href=\"http://blog.jquery.com/2016/06/09/jquery-3-0-final-released/\">http://blog.jquery.com/2016/06/09/jquery-3-0-final-released/</a></p>\n</blockquote>","timeToRead":10,"headings":[{"value":"轻量级构建","depth":4},{"value":"和 jQuery UI 以及 jQuery Mobile 之间的兼容性","depth":4},{"value":"主要变化","depth":4},{"value":"jQuery.Deferred 现在和 Promises/A+ 规范兼容","depth":5},{"value":"为 Deferreds 添加 .catch()","depth":5},{"value":"错误情况不静默失败","depth":5},{"value":"删除弃用的事件别名","depth":5},{"value":"动画现在使用 <code class=\"language-text\">requestAnimationFrame</code>","depth":5},{"value":"jQuery 自定义选择器的大提速","depth":5}]}},"pageContext":{"title":"jQuery 3.0 终于发布啦！","cover":null,"slug":"/jquery-3-0-final-released/","permalink":"/posts/2016/06/13/jquery-3-0-final-released/","excerpt":"jQuery 3.0 现在发布啦！这个版本从 2014 年 10 月就已经在开始开发了。我们的目标是创建一个更轻量、更快的 jQuery（带有向后兼容的思想）。我们删除了所有的兼容旧版本 IE 浏览器的解决办法，并在一些有意义的地方利用了一些较为现代的 web APIs。它是…","previous":{"id":"352739bd-e460-5ae8-b6f7-3be92e0f8832","frontmatter":{"title":"一个关于 Styled Components 的五分钟介绍","cover":"https://camo.githubusercontent.com/4cf7254acbf60caa799fadead24a8e35839b84af/68747470733a2f2f63646e2d696d616765732d312e6d656469756d2e636f6d2f6d61782f323030302f312a4449466a69345a6d4a61345f483345706247325841772e706e67","date":"2017-02-10"},"excerpt":"原文地址：A 5-minute Intro to Styled Components 原文作者：Sacha Greif 译文出自：掘金翻译计划 译者：根号三 校对者：Tina92、lovelyCiTY CSS 是一个很神奇的语言，你可以在 1…","fields":{"slug":"/a-5-minute-intro-to-styled-components/","permalink":"/posts/2017/02/10/a-5-minute-intro-to-styled-components/"}},"next":{"id":"75d7f54c-3ae9-5a0d-a70c-42cc3e6bbf41","frontmatter":{"title":"在 Chrome 开发者工具中调试 node.js","cover":null,"date":"2016-02-29"},"excerpt":"原文链接 : Debugging Node.js in Chrome DevTools 原文作者 : MATT DESLAURIERS 译文出自 : 掘金翻译计划 译者 : sqrthree (根号三) 校对者: shenxn、CoderBOBO…","fields":{"slug":"/debugging-nodejs-in-chrome-devtools/","permalink":"/posts/2016/02/29/debugging-nodejs-in-chrome-devtools/"}},"random":[{"id":"a9fb74b0-b64e-52c3-bd45-e4853f6b7f02","frontmatter":{"title":"解决 Javascript 中 atob 方法解码中文字符乱码问题","tags":null,"cover":null,"date":"2015-08-29"},"excerpt":"今天在写一个通过 GitHub API 获取 README 的功能的时候, 由于返回值为 Base64 编码, 我在尝试用 js 转换为 UFT-…","fields":{"slug":"/utf8-to-b64-with-js/","permalink":"/posts/2015/08/29/utf8-to-b64-with-js/"},"timeToRead":4},{"id":"66c80d25-6193-5119-a1cc-f1e093b3fd8d","frontmatter":{"title":"不要害怕 Rebase","tags":["译文","Git"],"cover":"https://hackernoon.com/hn-images/1*09KWDWnv1JDeZ-LEkXpL7g.png","date":"2018-03-20"},"excerpt":"原文地址：Don’t Fear The Rebase 原文作者：本文已获原作者 Jared Ready 授权，转载请注明出处。 译者：根号三 Git 的  命令是 Git 用户感到害怕和迷惑的一个常见原因，特别是那些来自可能更集中的版本控制系统的用户。这很正常。Rebase…","fields":{"slug":"/dont-fear-the-rebase/","permalink":"/posts/2018/03/20/dont-fear-the-rebase/"},"timeToRead":6},{"id":"ced7884e-d9e3-566d-8b5c-7046709b5745","frontmatter":{"title":"jQuery 3.0 以及兼容版的 Alpha 版本发布","tags":["jQuery3.0","译文"],"cover":null,"date":"2015-11-12"},"excerpt":"从我们做出上一个重大的版本发布已经过去很长时间了，所以你理应再得到一个新版本。因此我们非常高兴的宣布  的第一个  版本的发布。 尽管版本号已经到了 3.…","fields":{"slug":"/jquery3-0-alpha-versions-released/","permalink":"/posts/2015/11/12/jquery3-0-alpha-versions-released/"},"timeToRead":13}]}},
    "staticQueryHashes": ["1923471915","2251655042"]}